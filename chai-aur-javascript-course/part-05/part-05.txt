# "use strict" :
    "use strict"; Defines that JavaScript code should be executed in "strict mode".
    The "use strict" directive was new in ECMAScript version 5. It is not a statement, but a literal expression, ignored by earlier versions of JavaScript.
    The purpose of "use strict" is to indicate that the code should be executed in "strict mode". With strict mode, you can not, for example, use undeclared variables.
    All modern browsers support "use strict" except Internet Explorer 9 and lower.

    * Declaring Strict Mode
        Strict mode is declared by adding "use strict"; to the beginning of a script or a function.
        Declared at the beginning of a script, it has global scope (all code in the script will execute in strict mode):

# SEMICOLON IN JAVASCRIPT :
    Every language is very important for the compiler to understand the code. It denotes the end of the line in these languages but in the case of JavaScript, it is not necessary to add a semicolon to each line. It always remains the topic of debate whether one should use semicolons in each line of code of JavaScript or not. While it is true that I can save some bytes of memory by not using semicolons everywhere in the code, it is also true that using semicolons prevents facing any unwanted errors in compile time.
    If you want to avoid using semicolons in your code then you must know about the rules that the compiler uses while adding the semicolon itself during the parsing of code.

    Compiler adds the semicolon itself :
        When the starting code in the next line breaks the code of the current line.
        When the next line closes the current block by using ‘}’.
        When there is a return statement on its own line.
        When there is a break statement on its own line. 
        When there is a throw statement on its own line.
        When there is a continue statement on its own line.

